services:
  mysql_dev:
    image: mysql:8.0
    container_name: mysql_dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_dev_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - dev_network

  mysql_test:
    image: mysql:8.0
    container_name: mysql_test
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_TEST_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
      MYSQL_USER: ${MYSQL_TEST_USER}
      MYSQL_PASSWORD: ${MYSQL_TEST_PASSWORD}
    volumes:
      - mysql_test_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - test_network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - dev_network
      - test_network

  createbuckets:
    image: minio/mc
    container_name: createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; do echo waiting for minio; sleep 2; done;
      /usr/bin/mc mb myminio/${MINIO_DEFAULT_BUCKET};
      /usr/bin/mc policy set public myminio/${MINIO_DEFAULT_BUCKET};
      exit 0;
      "
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKET: ${MINIO_DEFAULT_BUCKET}
    networks:
      - dev_network
      - test_network

volumes:
  mysql_dev_data:
  mysql_test_data:
  minio_data:

networks:
  dev_network:
  test_network:
